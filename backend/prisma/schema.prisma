generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL")
}

model User {
  userId           Int              @id @default(autoincrement())
  name             String
  email            String           @unique
  phoneNumber      String?          
  loginWithGoogle  Boolean          @default(false)
  profileImg       String?
  role             Role
  department       String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  tickets          Ticket[]         @relation("UserTickets")
  ticketReplies    TicketReply[]    @relation("UserReplies")
  approvedTickets  ApprovedTicket[] @relation("Approver")
  notifications    Notification[]

  @@map("user")
}

model Ticket {
  ticketId   Int              @id @default(autoincrement())
  userId     Int
  subject    String
  description String          @db.Text
  priority   TicketPriority
  status     TicketStatus
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  user       User             @relation("UserTickets", fields: [userId], references: [userId])
  replies    TicketReply[]
  approvedBy ApprovedTicket[] @relation("ApprovedTickets")

  @@map("ticket")
}

model TicketReply {
  replyId   Int      @id @default(autoincrement())
  ticketId  Int
  userId    Int
  message   String   @db.Text
  isRead    Boolean  @default(false)

  ticket    Ticket   @relation(fields: [ticketId], references: [ticketId])
  user      User     @relation("UserReplies", fields: [userId], references: [userId])

  @@map("ticketReply")
}

model ApprovedTicket {
  ticketId  Int
  userId    Int

  ticket    Ticket @relation("ApprovedTickets", fields: [ticketId], references: [ticketId])
  user      User   @relation("Approver", fields: [userId], references: [userId])

  @@id([ticketId, userId])
  @@map("approvedTicket")
}

model Notification {
  id       Int      @id @default(autoincrement())
  userId   Int
  message  String   @db.Text

  user     User     @relation(fields: [userId], references: [userId])

  @@map("notification")
}

enum Role {
  ADMIN
  USER
}

enum TicketPriority {
  LOW
  MEDIUM
  HIGH
}

enum TicketStatus {
  AWAITING_APPROVAL
  PENDING
  REJECTED
  PROCESSING
  RESOLVED
}
